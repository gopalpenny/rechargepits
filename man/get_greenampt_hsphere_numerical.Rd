% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/green_ampt.R
\name{get_greenampt_hsphere_numerical}
\alias{get_greenampt_hsphere_numerical}
\title{Green-Ampt half-spherical pressure flow}
\usage{
get_greenampt_hsphere_numerical(
  theta_0,
  theta_s,
  Ksat,
  h_b,
  h_0,
  r_b,
  times,
  F_units = "ft^3"
)
}
\arguments{
\item{theta_0}{Soil volumetric water content prior to event}

\item{theta_s}{Soil porosity}

\item{Ksat}{Saturated hydraulic conductivity}

\item{h_b}{Hydraulic head at soil surface boundary}

\item{h_0}{Hydraulic head in soil prior to event}

\item{r_b}{radius from the centroid to the free water--soil boundary}

\item{times}{times at which to calculate cumulative infiltration}

\item{F_units}{character indicating the volumetric (L^3) `units` for the output}
}
\value{
Returns the cumulative amount of volumetric
infiltration occurs through the half sphere.
}
\description{
This function models saturated flow from a wetted half-spherical
surface into a soil profile. Flow is driven by pressure only and gravity
is ignored. This might mimic a situation of subsurface recharge where the
pressure head gradient is significantly larger than the elevation head
gradient. Otherwise, the assumptions are the same as in the Green-Ampt
equation. The equations to calculate the time required to achieve
some quantum of recharge are:
$$
t = \frac{\Delta \theta}{K_{sat}} \Big( \frac{1}{h_b - h_0} \Big) \Bigg[ \frac{1}{3 r_b} r_f^3 - \frac{1}{2}r_f^2 + \frac{r_b^2}{6} \Bigg]
$$

This function uses a numerical solver to obtain r_f at times t,
then converts these values to F_s using the equation:
$$
F_s = \Delta \theta \pi \frac{2}{3}\Big(  r_f^3 - r_b^3 \Big)
$$
}
\examples{

library(units)
r_b <- set_units(2, "ft") # length
theta_0 <- 0.2 # unitless
theta_s <- 0.35 # unitless
F_s <- set_units(c(1, 5, 10, 20), "ft^3") # units of length^2
Ksat <- set_units(0.2, "cm/h") # length / time
h_b <- set_units(6, "ft") # hydraulic head (length)
h_0 <- set_units(-10, "cm") # hydraulic head (length)
times <- get_greenampt_hsphere_time(theta_0, theta_s, F_s, Ksat, h_b, h_0, r_b)
F_s_calculated <- get_greenampt_hsphere_numerical(theta_0, theta_s, times, Ksat, h_b, h_0, r_b)
F_s_calculated
}
